@import '../../sass/variables';
@import '../../sass/placeholder-selectors/typography';

$transition: box-shadow 0.3s ease-in-out, background-color 0.3s ease-in-out;
$hero-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.1);
$transparent: rgba(0, 0, 0, 0);
$defaultPadding: $spacing-3 * 0.5;
$buttonBoxShadow: 0 1px 4px rgba(0, 0, 0, 0.126359), 0 1px 2px rgba(0, 0, 0, 0.10261);

.chBtn,
.core.chBtn {
  @extend %button;

  padding: $defaultPadding;
  border: none;
  border-radius: $spacing-05;
  color: $colors-text-primaryInverse;
  font-family: $baseFontType;
  background-color: $colors-brand-secondary;
  cursor: pointer;
  text-decoration: none;
  text-align: center;
  min-width: auto;
  box-shadow: $buttonBoxShadow;

  svg path {
    fill: currentColor;
  }
  .wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
  }

  &:not(.isIcon) .wrapper {
    height: $spacing-3;
  }

  &.small {
    padding: $spacing-05 $spacing-1;
    min-width: 4rem;

    &.isIcon {
      padding: $spacing-6 * 0.125;
    }

    svg {
      min-width: $spacing-5 * 0.5;
      min-height: $spacing-5 * 0.5;
      width: $spacing-5 * 0.5;
      height: $spacing-5 * 0.5;
    }
  }

  &.medium {
    padding: $spacer * 1.5; // there is no such a size on the variables file
    min-width: 6rem;
  }

  &.large {
    padding: $spacing-2;
    min-width: 6rem;
  }

  &.isIcon {
    min-width: auto;
    border-radius: 50%;

    svg path {
      fill: currentColor;
    }
  }

  &.grow-target-size {
    &.isIcon::after {
      width: $spacing-6;
      top: -$spacing-1;
      left: -$spacing-1;
    }

    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: $spacing-6;
      top: -$spacing-1;
    }
  }

  &.primaryAccessible {
    background-color: $colors-brand-primaryAccessible;
    color: $colors-text-primaryInverse;
    box-shadow: $buttonBoxShadow;
    transition: $transition;

    &:active {
      background-color: $transparent;
    }

    &:hover {
      background-color: $colors-base-blueLagoon800;
      transition: $transition;
    }
  }

  &.secondary {
    background-color: $colors-text-primaryInverse;
    color: $colors-brand-primaryAccessible;
    box-shadow: $buttonBoxShadow;
    transition: $transition;

    &:active {
      background-color: $transparent;
    }

    &:hover {
      background-color: $colors-brand-primaryLight;
      transition: $transition;
    }
  }

  &.tertiary {
    background-color: $transparent;
    color: $colors-brand-primaryAccessible;

    &.label-left-align {
      margin-left: -$spacing-2;

      &.small {
        margin-left: -$spacing-1;
      }

      &.large {
        margin-left: -$spacing-5 * 0.5;
      }
    }

    &.label-right-align {
      margin-right: -$spacing-2;

      &.small {
        margin-right: -$spacing-1;
      }

      &.large {
        margin-right: -$spacing-5 * 0.5;
      }
    }

    &:active {
      background-color: $transparent;
    }

    &:hover {
      background-color: $colors-brand-primaryLight;

      &:active {
        background-color: $transparent;
      }
    }
  }

  &.disabled {
    background-color: $colors-base-grey300;
    color: $colors-base-grey600;
    box-shadow: none;
    pointer-events: auto;
    cursor: not-allowed;

    &:hover {
      background-color: $colors-base-grey300;
    }

    &.isIcon {
      svg path {
        fill: $colors-base-grey700;
      }
    }
  }

  &:hover {
    background-color: darken($colors-brand-secondary, 10%);
  }

  &:active {
    background-color: $colors-brand-secondary;
    outline: none;
  }
}

.loader {
  position: absolute;
}
